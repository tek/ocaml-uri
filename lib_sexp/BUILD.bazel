load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_module",
    "ocaml_library",
    "ocaml_signature",
    "ppx_module",
    "ppx_executable",
    "ppx_library",
)
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("//:bzl/library.bzl", "lib", "copy_interface")

copy_interface(name = "uri_sexp", out = "Uri_sexp")

ocaml_signature(
    name = "uri_sexp_sig",
    src = "uri_sexp_mli",
    deps_opam = ["sexplib"],
    deps = ["//lib:lib-uri"],
)

ppx_module(
    name = "driver",
    struct = ":driver.ml",
    deps_opam = ["ppxlib"],
    opts = ["-linkall"],
)

write_file(
    name = "gendriver",
    out = "driver.ml",
    content = ["let () = Ppxlib.Driver.standalone ()"],
)

ppx_executable(
    name = "sexp_preprocessor",
    main = ":driver",
    deps_opam = ["ppx_sexp_conv"],
)

ppx_module(
    name = "uri_sexp",
    struct = "uri_sexp.ml",
    sig = ":uri_sexp_sig",
    deps_opam = ["sexplib", "ppx_sexp_conv"],
    deps = ["//lib:lib-uri"],
    ppx = ":sexp_preprocessor",
    ppx_print = "@ppx//print:text",
)

ppx_library(
    name = "lib-uri-sexp",
    modules = [":uri_sexp"],
    visibility = ["//visibility:public"],
)
